# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    env:
      UNS_mqtt.host: "localhost"
      UNS_mqtt.port: 1883
      UNS_graphdb.url: "bolt://localhost:7687"
      UNS_graphdb.username: "neo4j"
      UNS_graphdb.password: $(openssl rand -base64 32 | tr -dc '[:alnum:]')
    services:
      uns_mqtt:
        image: emqx/emqx:latest
        ports:
          - "1883:1883"
          - "8083:8083"
      uns_graphdb:
        image: neo4j:latest
        ports:
          - "7474:7474"
          - "7687:7687"
        env: 
          NEO4J_AUTH: neo4j/${{ env.UNS_graphdb.password }}
          apoc.export.file.enabled: true
          apoc.import.file.enabled: true
          apoc.import.file.use_neo4j_config: true
          NEO4J_PLUGINS: \["apoc"\]
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "test=world" >> $GITHUB_OUTPUT
      - id: step3
        run: |
          netstat -ntpl
          ifconfig
          docker ps
          env
          echo "-----------------------------------------------"
          echo "$UNS_mqtt_host $UNS_mqtt_port $UNS_graphdb_url"
          echo "-----------------------------------------------"
          nc -zv $UNS_mqtt_host $UNS_mqtt_port
          nc -zv localhost 7687
          nc -zv uns_graphdb 7687       
          nc -zv uns_mqtt $UNS_mqtt_port
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: |
          echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}} 
