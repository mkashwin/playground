# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> $GITHUB_OUTPUT
      - id: step2
        run: echo "test=world" >> $GITHUB_OUTPUT
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - run: |
          echo ${{needs.job1.outputs.output1}} ${{needs.job1.outputs.output2}}
          # Step 2: Set thr various environment variables
          export UNS_mqtt_host=localhost
          export UNS_mqtt_port=1883
          export UNS_graphdb_url=bolt://localhost:7687
          export UNS_graphdb_username=neo4j
          export UNS_graphdb_password=$(openssl rand -base64 32 | tr -dc '[:alnum:]')

          # Step 3: Run the required docker files
          docker run  --name  uns_mqtt -d -p 1883:1883 -p 8083:8083 emqx/emqx:latest
          docker run \
            --name  uns_graphdb \
            -p7474:7474 -p7687:7687 \
            -d \
            --env NEO4J_AUTH=neo4j/$UNS_graphdb_password \
            --env apoc.export.file.enabled=true \
            --env apoc.import.file.enabled=true \
            --env apoc.import.file.use_neo4j_config=true \
            --env NEO4J_PLUGINS=\[\"apoc\"\] \
            neo4j:latest
          docker ps
          # Step 5: Stop the docker container    
          netstat -ntpl
          ifconfig
          docker ps
          docker stop  uns_mqtt
          docker stop  uns_graphdb   
